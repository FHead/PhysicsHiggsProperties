#include <iostream>
using namespace std;

#include "TH2D.h"
#include "TCanvas.h"

#include "SetStyle.h"

#include "LeptonResponse.h"

double SmearElectron7TeVSigma(double pt, double pzp, double phi);
double SmearElectron8TeVSigma(double pt, double pzp, double phi);
double SmearMuon7TeVSigma(double pt, double pzp, double phi);
double SmearMuon8TeVSigma(double pt, double pzp, double phi);

int main()
{
   SetThesisRegularStyle();

   TH2D HE7("HE7", ";|#eta|;p_{T}", 25, 0, 2.5, 60, 0, 60);
   TH2D HE8("HE8", ";|#eta|;p_{T}", 25, 0, 2.5, 60, 0, 60);
   TH2D HM7("HM7", ";|#eta|;p_{T}", 25, 0, 2.5, 60, 0, 60);
   TH2D HM8("HM8", ";|#eta|;p_{T}", 25, 0, 2.5, 60, 0, 60);

   for(int ix = 1; ix <= HM8.GetNbinsX(); ix++)
   {
      for(int iy = 1; iy <= HM8.GetNbinsY(); iy++)
      {
         double eta = HM8.GetXaxis()->GetBinCenter(ix);
         double pt = HM8.GetYaxis()->GetBinCenter(iy);
         
         FourVector X;
         X.SetPtEtaPhi(pt, eta, 0);

         double pzp = X[3] / X.GetP();

         if(eta <= 2.5 && pt >= 7)
         {
            HE7.SetBinContent(ix, iy, 100 * SmearElectron7TeVSigma(pt, pzp, 0));
            HE8.SetBinContent(ix, iy, 100 * SmearElectron8TeVSigma(pt, pzp, 0));
         }
         if(eta <= 2.4 && pt >= 5)
         {
            HM7.SetBinContent(ix, iy, 100 * SmearMuon7TeVSigma(pt, pzp, 0));
            HM8.SetBinContent(ix, iy, 100 * SmearMuon8TeVSigma(pt, pzp, 0));
         }
      }
   }

   HE7.SetStats(0);
   HE8.SetStats(0);
   HM7.SetStats(0);
   HM8.SetStats(0);

   HE7.SetMaximum(10);
   HE8.SetMaximum(10);
   HM7.SetMaximum(10);
   HM8.SetMaximum(10);

   TCanvas C;

   HE7.Draw("colz");

   C.SaveAs("DetectorParameterization-Extraction-Summary-E7.png");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E7.C");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E7.eps");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E7.pdf");

   HE8.Draw("colz");

   C.SaveAs("DetectorParameterization-Extraction-Summary-E8.png");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E8.C");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E8.eps");
   C.SaveAs("DetectorParameterization-Extraction-Summary-E8.pdf");

   HM7.Draw("colz");

   C.SaveAs("DetectorParameterization-Extraction-Summary-M7.png");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M7.C");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M7.eps");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M7.pdf");

   HM8.Draw("colz");

   C.SaveAs("DetectorParameterization-Extraction-Summary-M8.png");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M8.C");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M8.eps");
   C.SaveAs("DetectorParameterization-Extraction-Summary-M8.pdf");

   return 0;
}

double SmearElectron7TeVSigma(double pt, double pzp, double phi)
{
   static const double Sigma[16][14] =
   {
      {0.0136463, 0.0172931, 0.020329, 0.0183891, 0.0221841, 0.0214687, 0.021028, 0.0203803, 0.0197692, 0.0181271, 0.0170517, 0.0142254, 0.0157431, 0.0132159},
      {0.0098737, 0.0196884, 0.0204638, 0.0187292, 0.0183724, 0.0224888, 0.0219712, 0.0212361, 0.0206783, 0.0189421, 0.0178293, 0.0170341, 0.0163844, 0.0161336},
      {0.00985307, 0.0182436, 0.0213661, 0.0228511, 0.0216741, 0.0213077, 0.0205978, 0.0221861, 0.0215938, 0.020717, 0.0195745, 0.0186036, 0.0172738, 0.0143258},
      {0.0141638, 0.0234496, 0.0280383, 0.022577, 0.0227109, 0.024968, 0.0243232, 0.0233731, 0.0206445, 0.0216589, 0.0204083, 0.0193223, 0.0179927, 0.0168673},
      {0.00995239, 0.0256113, 0.0254591, 0.0256206, 0.0256755, 0.0256729, 0.0247931, 0.0244038, 0.0275469, 0.0255212, 0.0230985, 0.0219982, 0.0208342, 0.0194894},
      {0.0152144, 0.0389008, 0.0340418, 0.0306449, 0.0348868, 0.0359127, 0.0386249, 0.038679, 0.0380598, 0.0381959, 0.0360555, 0.034142, 0.032732, 0.0300356},
      {0.000948107, 0.0485404, 0.0702274, 0.0495113, 0.0507472, 0.0495654, 0.0496153, 0.048453, 0.0496099, 0.0540856, 0.045463, 0.0421772, 0.0389641, 0.0363768},
      {0.0278297, 0.0514397, 0.0844574, 0.1, 0.0755575, 0.0613765, 0.0614083, 0.0629307, 0.0638989, 0.0628387, 0.0649282, 0.058412, 0.0582679, 0.051751},
      {0.00173844, 0.0580293, 0.0828441, 0.0985409, 0.0875047, 0.0728841, 0.0698232, 0.065944, 0.0683395, 0.0637534, 0.00113191, 0.0548803, 0.0513415, 0.0486519},
      {0.0240856, 0.0557142, 0.0815044, 0.0934122, 0.0722848, 0.0818756, 0.0666917, 0.0627818, 0.0579222, 0.0546512, 0.0500195, 0.0470586, 0.0451394, 0.0414019},
      {0.0357874, 0.0549462, 0.0768927, 0.0690525, 0.0568372, 0.0613066, 0.0590125, 0.0541926, 0.0552375, 0.0505717, 0.0480052, 0.0454146, 0.0431848, 0.0405792},
      {0.0225137, 0.0508917, 0.028894, 0.0649854, 0.0636012, 0.0580133, 0.025, 0.0537661, 0.0523466, 0.0491773, 0.0453479, 0.0433695, 0.042577, 0.0400075},
      {0.0206599, 0.0502539, 0.0677648, 0.0612626, 0.0608555, 0.0538579, 0.0547748, 0.0507672, 0.0486506, 0.0477868, 0.0440227, 0.0416778, 0.0403565, 0.0395282},
      {0.0144736, 0.0475275, 0.0663345, 0.0542395, 0.0537823, 0.0524296, 0.0511682, 0.0480538, 0.0458283, 0.0450139, 0.0432302, 0.0410155, 0.0399074, 0.0382859},
      {2.23965e-05, 0.0516994, 0.063962, 0.0573239, 0.0552024, 0.0541599, 0.049935, 0.0488751, 0.0486016, 0.0448341, 0.042585, 0.0415199, 0.0397912, 0.0382365},
      {0.000344586, 1.1905e-05, 3.90865e-05, 0.0443989, 0.0163611, 0.0805081, 0.0999925, 0.00983239, 0.0540413, 0.0552692, 0.0337236, 0.0399391, 0.0500075, 0.0297941}
   };

   static const double ptBins[15] = {5,7,8,9,10,12,14,16,18,20,25,30,35,40,50};
   // static const double etaBins[17] = {0,0.2,0.4,0.6,0.8,1,1.2,1.4442,1.566,1.8,2,2.1,2.2,2.3,2.4,2.5,2.6};
   static const double pzpBins[17] = {0, 0.1973753202, 0.3799489623, 0.537049567, 0.6640367703, 0.761594156, 0.833654607, 0.894540039, 0.9163871674, 0.9468060128, 0.9640275801, 0.9704519366, 0.97574313, 0.9800963963, 0.9836748577, 0.9866142982, 0.9890274022};

   int PtBin = FindLeptonBinBinary(pt, ptBins, 14) - 1;
   if(PtBin >= 14)
      PtBin = 13;
   if(PtBin < 0)
      return 0;

   int EtaBin = FindLeptonBinBinary(pzp, pzpBins, 16) - 1;
   if(EtaBin >= 16 || EtaBin < 0)
      return 0;

   return Sigma[PtBin][EtaBin];
}

double SmearElectron8TeVSigma(double pt, double pzp, double phi)
{
   static const double Sigma[16][14] =
   {
      {0.0173289, 0.0178674, 0.0180923, 0.0186417, 0.0181647, 0.0180003, 0.0181291, 0.0174189, 0.0168522, 0.0162348, 0.0185802, 0.0169454, 0.0168786, 0.0163606},
      {0.0178724, 0.021, 0.0189024, 0.0201968, 0.0187285, 0.0185058, 0.0181668, 0.0177976, 0.0176497, 0.0167498, 0.018, 0.0183081, 0.0175966, 0.0161743},
      {0.0225366, 0.0188839, 0.0223168, 0.0194936, 0.0196411, 0.0194116, 0.0212061, 0.0188322, 0.0184254, 0.0194183, 0.018, 0.0192815, 0.0185313, 0.0175548},
      {0.0202162, 0.019337, 0.0229071, 0.0207446, 0.0207306, 0.0229245, 0.0222534, 0.0197515, 0.022068, 0.0206837, 0.0191896, 0.0202223, 0.0192318, 0.0181468},
      {0.026, 0.0263247, 0.0256124, 0.0239912, 0.0256925, 0.0245, 0.0251976, 0.0251811, 0.0248507, 0.024, 0.0246818, 0.0206197, 0.0218663, 0.0204357},
      {0.0346561, 0.0364864, 0.026322, 0.0276049, 0.0309479, 0.0325, 0.0383883, 0.0373863, 0.0397933, 0.0355852, 0.033117, 0.0346604, 0.0322397, 0.0300886},
      {0.0459181, 0.043351, 0.0395659, 0.0441427, 0.0447637, 0.0507463, 0.0518201, 0.0506777, 0.0524996, 0.0467137, 0.0438692, 0.0403898, 0.0377837, 0.0349883},
      {0.0546588, 0.047829, 0.0787882, 0.0816992, 0.0545541, 0.0641257, 0.0601106, 0.0641596, 0.065417, 0.05889, 0.0596562, 0.0539335, 0.0514995, 0.047036},
      {0.0640643, 0.0682386, 0.0890654, 0.0806703, 0.0720326, 0.0683678, 0.0650426, 0.0633671, 0.0625881, 0.0573466, 0.0520951, 0.0487122, 0.0454805, 0.042353},
      {0.0863718, 0.0643291, 0.0846296, 0.0847514, 0.0675784, 0.0617583, 0.059979, 0.0560985, 0.0537596, 0.0490529, 0.0455867, 0.0425338, 0.039969, 0.0378593},
      {0.0770925, 0.0683396, 0.0803904, 0.0662891, 0.0661109, 0.055, 0.0594824, 0.0528902, 0.0546543, 0.0474247, 0.045637, 0.0422869, 0.0392793, 0.0388966},
      {0.0672049, 0.0604406, 0.0737542, 0.073808, 0.0607183, 0.0602394, 0.0581296, 0.05, 0.0519412, 0.0450829, 0.0445037, 0.0419444, 0.0388277, 0.0382045},
      {0.0999999, 0.0525502, 0.0722255, 0.073822, 0.0566643, 0.0566298, 0.0534097, 0.0520032, 0.051693, 0.0468366, 0.0423462, 0.0392933, 0.0388477, 0.0368184},
      {0.0452864, 0.0625574, 0.063471, 0.0502384, 0.0563713, 0.0562919, 0.0496833, 0.0475337, 0.0454608, 0.0435512, 0.041338, 0.0381839, 0.0372006, 0.0358048},
      {0.0800763, 0.0515405, 0.0640276, 0.0678351, 0.0572607, 0.0572772, 0.0501872, 0.049051, 0.0492904, 0.0446135, 0.0405564, 0.0379152, 0.035845, 0.0355153},
      {0.00027612, 0.0280278, 0.000753262, 1.15605e-05, 0.0685295, 0.0269112, 4.42716e-05, 0.0205807, 0.050989, 1.36037e-05, 0.0232658, 0.0648608, 2.73994e-05, 0.0663347}
   };

   static const double ptBins[15] = {5,7,8,9,10,12,14,16,18,20,25,30,35,40,50};
   // static const double etaBins[17] = {0,0.2,0.4,0.6,0.8,1,1.2,1.4442,1.566,1.8,2,2.1,2.2,2.3,2.4,2.5,2.6};
   static const double pzpBins[17] = {0, 0.1973753202, 0.3799489623, 0.537049567, 0.6640367703, 0.761594156, 0.833654607, 0.894540039, 0.9163871674, 0.9468060128, 0.9640275801, 0.9704519366, 0.97574313, 0.9800963963, 0.9836748577, 0.9866142982, 0.9890274022};

   int PtBin = FindLeptonBinBinary(pt, ptBins, 14) - 1;
   if(PtBin >= 14)
      PtBin = 13;
   if(PtBin < 0)
      return 0;

   int EtaBin = FindLeptonBinBinary(pzp, pzpBins, 16) - 1;
   if(EtaBin >= 16 || EtaBin < 0)
      return 0;

   return Sigma[PtBin][EtaBin];
}

double SmearMuon7TeVSigma(double pt, double pzp, double phi)
{
   static const double Sigma[16][14] =
   {
      {0.00755502, 0.00774746, 0.00781707, 0.0081704, 0.00816942, 0.00854209, 0.0087187, 0.00884545, 0.00895067, 0.0091265, 0.00962343, 0.00976474, 0.0101862, 0.0106732},
      {0.00854333, 0.00907808, 0.00914255, 0.00921687, 0.00929664, 0.00955704, 0.00963746, 0.00954031, 0.00994187, 0.0101059, 0.0103475, 0.0106293, 0.0105, 0.011403},
      {0.00962016, 0.00982274, 0.00986719, 0.0100052, 0.0101389, 0.0103485, 0.0106224, 0.0106497, 0.0109486, 0.0105, 0.0112898, 0.0116897, 0.0114, 0.0122213},
      {0.0101439, 0.010426, 0.0106823, 0.0107127, 0.0109082, 0.0111237, 0.0111665, 0.0115016, 0.0114323, 0.0117972, 0.0121065, 0.0122864, 0.0125944, 0.0129272},
      {0.013, 0.014083, 0.0140255, 0.0145483, 0.0144283, 0.0147992, 0.0149704, 0.0149231, 0.0152933, 0.0153897, 0.0149999, 0.016, 0.0168845, 0.0173575},
      {0.0160936, 0.0165899, 0.0165954, 0.0167595, 0.0168887, 0.0173244, 0.017049, 0.0172858, 0.0177387, 0.0179489, 0.0175, 0.0186742, 0.0190657, 0.0198382},
      {0.0185671, 0.0191732, 0.0193066, 0.0190779, 0.01966, 0.019633, 0.019, 0.0202104, 0.0203547, 0.0210713, 0.0214273, 0.0218145, 0.0222516, 0.0227034},
      {0.0178635, 0.018705, 0.0184162, 0.0190999, 0.0190911, 0.0192461, 0.0194933, 0.019638, 0.0203164, 0.0203702, 0.0212638, 0.0216442, 0.0224449, 0.0227687},
      {0.0164533, 0.0166819, 0.0168846, 0.016, 0.0174372, 0.0177452, 0.0178476, 0.0187012, 0.0187301, 0.0194044, 0.0205763, 0.0214294, 0.0220616, 0.0231604},
      {0.0179787, 0.0192861, 0.0193277, 0.019, 0.0200674, 0.0209062, 0.0212262, 0.0220753, 0.021, 0.0234875, 0.0250997, 0.025, 0.0268604, 0.0302667},
      {0.0212286, 0.0223666, 0.0229753, 0.023138, 0.02393, 0.0241438, 0.0250831, 0.026107, 0.0267542, 0.0290352, 0.031167, 0.0338822, 0.0367208, 0.0409373},
      {0.0234016, 0.0246588, 0.0250394, 0.0251142, 0.0258239, 0.0262105, 0.0278368, 0.0277009, 0.0290425, 0.0298224, 0.0322392, 0.0354304, 0.0376751, 0.0422599},
      {0.0250568, 0.0265531, 0.0266802, 0.0277996, 0.0275537, 0.028623, 0.0291683, 0.0300402, 0.0311286, 0.0324011, 0.0352323, 0.0372461, 0.0407783, 0.0449177},
      {0.0260697, 0.0275052, 0.0274354, 0.0285728, 0.029437, 0.031806, 0.032628, 0.0339185, 0.035412, 0.0378693, 0.0415494, 0.0464614, 0.0493053, 0.0559188},
      {0.01865, 0.0538686, 0.0144341, 0.0186373, 0.0261579, 0.0492496, 0.0239182, 0.0693001, 0.00852323, 0.0632908, 0.066594, 0.0277636, 0.0810029, 0.0277697},
      {0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865, 0.01865}
   };

   static const double ptBins[15] = {5,7,8,9,10,12,14,16,18,20,25,30,35,40,50};
   // static const double etaBins[17] = {0,0.2,0.4,0.6,0.8,1,1.2,1.4442,1.566,1.8,2,2.1,2.2,2.3,2.4,2.5,2.6};
   static const double pzpBins[17] = {0, 0.1973753202, 0.3799489623, 0.537049567, 0.6640367703, 0.761594156, 0.833654607, 0.894540039, 0.9163871674, 0.9468060128, 0.9640275801, 0.9704519366, 0.97574313, 0.9800963963, 0.9836748577, 0.9866142982, 0.9890274022};

   int PtBin = FindLeptonBinBinary(pt, ptBins, 14) - 1;
   if(PtBin >= 14)
      PtBin = 13;
   if(PtBin < 0)
      return 0;

   int EtaBin = FindLeptonBinBinary(pzp, pzpBins, 16) - 1;
   if(EtaBin >= 16 || EtaBin < 0)
      return 0;

   return Sigma[PtBin][EtaBin];
}

double SmearMuon8TeVSigma(double pt, double pzp, double phi)
{
   static const double Sigma[16][14] =
   {
      {0.00809055, 0.00826796, 0.00867608, 0.00882264, 0.00916998, 0.0092412, 0.00954848, 0.0097952, 0.00993853, 0.0101466, 0.0106959, 0.0116362, 0.0119999, 0.0127149},
      {0.00926059, 0.0093751, 0.00983167, 0.00960459, 0.00975658, 0.00988769, 0.0104283, 0.0103298, 0.0108349, 0.0110636, 0.01169, 0.0123897, 0.0125679, 0.0128},
      {0.0098814, 0.0104626, 0.0103914, 0.01057, 0.0107846, 0.0109216, 0.0109848, 0.011327, 0.0115786, 0.0120225, 0.0123031, 0.0128928, 0.0132848, 0.0140163},
      {0.0106055, 0.0109321, 0.0111431, 0.0113608, 0.0112453, 0.0115358, 0.0117976, 0.0120539, 0.012586, 0.0124555, 0.0132931, 0.0137112, 0.0140878, 0.0147089},
      {0.0134344, 0.0136712, 0.0135977, 0.0139, 0.0138914, 0.0142472, 0.0144883, 0.0149355, 0.0150182, 0.0153682, 0.0159359, 0.016, 0.0170642, 0.0176938},
      {0.0160235, 0.015, 0.0162926, 0.0167062, 0.0165023, 0.0166353, 0.0170366, 0.0171989, 0.0177346, 0.0175437, 0.0182991, 0.0190864, 0.0192349, 0.02},
      {0.0189208, 0.0186125, 0.0187503, 0.0187158, 0.01865, 0.0195726, 0.0198754, 0.0203888, 0.020675, 0.0205432, 0.0210496, 0.0218094, 0.0223163, 0.022941},
      {0.017, 0.0186799, 0.018, 0.0189113, 0.0186044, 0.0189792, 0.0191738, 0.0193251, 0.0190981, 0.0201596, 0.020667, 0.021646, 0.0224156, 0.0229648},
      {0.0175942, 0.0176935, 0.0179984, 0.017985, 0.0184815, 0.0185256, 0.0191925, 0.0191615, 0.0194259, 0.0200592, 0.0203568, 0.0211791, 0.0220856, 0.0226365},
      {0.0209586, 0.0195, 0.0209487, 0.0214028, 0.0211249, 0.021775, 0.0218582, 0.0225959, 0.0231794, 0.0231438, 0.024197, 0.0253379, 0.0258812, 0.0274337},
      {0.0251076, 0.0261158, 0.0253279, 0.0270536, 0.0264712, 0.025949, 0.0269319, 0.0282282, 0.0285369, 0.027, 0.0295306, 0.0311288, 0.0318073, 0.0330277},
      {0.0271045, 0.0265795, 0.026223, 0.02812, 0.0287077, 0.027901, 0.0288432, 0.0296202, 0.0306073, 0.0318355, 0.0307214, 0.0336578, 0.0353653, 0.0373018},
      {0.0279801, 0.028131, 0.030135, 0.0319703, 0.0296321, 0.031766, 0.0309397, 0.0315221, 0.0342729, 0.0338925, 0.0357452, 0.0380237, 0.0397964, 0.0425109},
      {0.030058, 0.0326159, 0.0301601, 0.032155, 0.0305166, 0.0322682, 0.0337985, 0.0344683, 0.0371482, 0.0370468, 0.0377207, 0.0425159, 0.04547, 0.0490488},
      {0.0401415, 0.0405705, 0.00150002, 0.0227694, 0.0513997, 0.00150506, 0.0169379, 0.0109832, 0.015288, 0.00470503, 0.0497103, 0.0286564, 0.010591, 0.0041284},
      {0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015}
   };
   
   static const double ptBins[15] = {5,7,8,9,10,12,14,16,18,20,25,30,35,40,50};
   // static const double etaBins[17] = {0,0.2,0.4,0.6,0.8,1,1.2,1.4442,1.566,1.8,2,2.1,2.2,2.3,2.4,2.5,2.6};
   static const double pzpBins[17] = {0, 0.1973753202, 0.3799489623, 0.537049567, 0.6640367703, 0.761594156, 0.833654607, 0.894540039, 0.9163871674, 0.9468060128, 0.9640275801, 0.9704519366, 0.97574313, 0.9800963963, 0.9836748577, 0.9866142982, 0.9890274022};

   int PtBin = FindLeptonBinBinary(pt, ptBins, 14) - 1;
   if(PtBin >= 14)
      PtBin = 13;
   if(PtBin < 0)
      return 0;

   int EtaBin = FindLeptonBinBinary(pzp, pzpBins, 16) - 1;
   if(EtaBin >= 16 || EtaBin < 0)
      return 0;

   return Sigma[PtBin][EtaBin];
}


